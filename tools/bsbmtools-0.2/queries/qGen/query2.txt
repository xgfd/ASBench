# source: https://blog.semantic-web.at/2015/09/29/sparql-analytics-proves-boxers-live-dangerously/
PREFIX dbp:<http://dbpedia.org/ontology/>
PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>
SELECT ?athleteGroupEN (COUNT(?athlete) AS ?count) (AVG(?age) AS ?ageAvg)
WHERE
{
  FILTER(?age >= 20 && ?age <= 100) .
  {
    SELECT DISTINCT ?athleteGroupEN ?athlete (?deathYear - ?birthYear AS ?age)
    WHERE
    {
      ?subOfAthlete rdfs:subClASsOf dbp:Athlete .
      ?subOfAthlete rdfs:label ?athleteGroup FILTER(LANG(?athleteGroup) = "en") .
      BIND(STR(?athleteGroup) AS ?athleteGroupEN)
      ?athlete a ?subOfAthlete .
      ?athlete dbp:birthDate ?birth FILTER(DATATYPE(?birth) = xsd:date) .
      ?athlete dbp:deathDate ?death FILTER(DATATYPE(?death) = xsd:date) .
      BIND (STRDT(REPLACE(?birth,"^(\\d+)-.*","$1"),xsd:integer) AS ?birthYear) .
      BIND (STRDT(REPLACE(?death,"^(\\d+)-.*","$1"),xsd:integer) AS ?deathYear) .
    }
  }
}
GROUP BY ?athleteGroupEN
HAVING (COUNT(?athlete) >= 25)
ORDER BY ?ageAvg

# digraph{
# "?athlete"->"?birth"[label="dbp:birthDate"];
# "?subOfAthlete"->"?athleteGroup"[label="rdfs:label"];
# "?athlete"->"?death"[label="dbp:deathDate"];
# "?athlete"->"?subOfAthlete"[label="rdf:type"];
# "?subOfAthlete"->"dbp:Athlete"[label="rdfs:subClASsOf"];
# }
